package lab212;
import java.util.Scanner;

class InvalidAmountException extends Exception
{
	InvalidAmountException(String s) 
	{
		super(s);
	}
}

class InsufficientFundsException extends Exception
{
	InsufficientFundsException(String s) 
	{
		super(s);
	}
}

class BankDetails 
{
	private String accno;
	private String name;
	private int balance;
	Scanner sc = new Scanner(System.in);
	String acctype;

	public void openAccount() 
	{
		System.out.print("Account Type: ");
		acctype = sc.next();
		System.out.print("Account No: ");
		accno = sc.next();
		System.out.print("Account Holder: ");
		name = sc.next();
		System.out.print("Account Balance: ");
		balance = sc.nextInt();
	}

	public void showAccount() 
	{
		System.out.println(name);
		System.out.println(acctype);
		System.out.println(accno);
		System.out.println(balance);
	}

	public void deposit()
	{
		int amt;
		System.out.print("Enter the amount you want to deposit: ");
		amt = sc.nextInt();
		try
		{
			if (amt <= 0) 
			{
				throw new InvalidAmountException("Deposit amount should be greater than 0");
			}
			balance = balance + amt;
			System.out.println("Balance after deposit: " + balance);
		} catch (InvalidAmountException E) {
			System.out.println("Exception occured: " + E);
		}

	}

	public void withdrawal() 
	{
		int amt;
		System.out.print("Enter the amount you want to withdraw: ");
		amt = sc.nextInt();
		try {
			if (amt <= 0) {
				throw new InvalidAmountException("Witdraw amount should be greater than 0");
			}

			try {
				if (balance < amt)
				{
					throw new InsufficientFundsException("Withdraw amount should not exceed balance");
				}
				balance = balance - amt;
				System.out.println("Balance after withdrawal: " + balance);
			} catch (InsufficientFundsException E) 
			{
				System.out.println("Exception occured: " + E);
			}
		} catch (InvalidAmountException E) 
		{
			System.out.println("Exception occured: " + E);
		}
	}

	public boolean search(String ac_no) 
	{
		if (accno.equals(ac_no)) 
		{
			showAccount();
			return (true);
		}
		return (false);
	}
}



public class Expt10 
{

	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		System.out.print("How many number of customers do you want to input : ");
		int n = sc.nextInt();
		BankDetails C[] = new BankDetails[n];
		for (int i = 0; i < C.length; i++) 
		{
			C[i] = new BankDetails();
			C[i].openAccount();
		}
		int ch;
		System.out.println("--BANK APPLICATION--\n1. Display all accounts \n2. Search by Account number\n3. Deposit  amount \n4. Withdraw\n5. Exit ");
		System.out.println("\n============================================");
		
		do {
			System.out.print("\nEnter your choice: ");
			ch = sc.nextInt();
			switch (ch) 
			{
			case 1:
				for (int i = 0; i < C.length; i++) 
				{
					C[i].showAccount();
				}
				break;
			case 2:
				System.out.print("Enter account no. : ");
				String ac_no = sc.next();
				boolean found = false;
				for (int i = 0; i < C.length; i++) 
				{
					found = C[i].search(ac_no);
					if (found) 
					{
						break;
					}
				}
				if (!found) 
				{
					System.out.println("Search failed! Account doesn't exist..!!");
				}
				break;
			case 3:
				System.out.print("Enter Account no. : ");
				ac_no = sc.next();
				found = false;
				for (int i = 0; i < C.length; i++) 
				{
					found = C[i].search(ac_no);
					if (found) 
					{
						C[i].deposit();
						break;
					}
				}
				if (!found) 
				{
					System.out.println("Search failed! Account doesn't exist..!!");
				}
				break;
			case 4:
				System.out.print("Enter Account No : ");
				ac_no = sc.next();
				found = false;
				for (int i = 0; i < C.length; i++) 
				{
					found = C[i].search(ac_no);
					if (found) 
					{
						C[i].withdrawal();
						break;
					}
				}
				if (!found) 
				{
					System.out.println("Search failed! Account doesn't exist..!!");
				}
				break;
			case 5:
				System.out.println("Visit Again :)");
				break;
			}
		} while (ch != 5);
		sc.close();
	}
}



